@page "/LandingPage"
@using TaskManager.Business.Dtos
@using TaskManager.Components
@using System
@inject HttpClient Http

    <AuthorizeView>
        <Authorized>
            <div class="container">

                <div class="row">


                    @if (tasks == null)
                    {

                        <Loader></Loader>
                    }
                    else
                    {
                        
                        @foreach (var item in tasks)
                        {

                            if (@item.StartDate.DateTime.Day == DateTime.Today.Day || @item.Status.Name == "Late")
                            {
                <div class="card cardbody" style=" box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2); transition: 0.3s; padding: 10px; margin: 5px; width: 23rem;">

                    <ToolTip Text="@item.Status.Name.ToString()"><p class="status @item.Status.Name.ToString()"></p></ToolTip>
                    
                    <h3>@item.Title</h3>
                    <p style="margin-bottom: 0;">Start: @item.StartDate.ToString("MM/dd/yyyy hh:mm")</p>
                    <p>End: @item.EndDate.ToString("MM/dd/yyyy hh:mm")</p>
                    <p style="height: 50px; text-overflow: clip; overflow: auto;">@item.Description</p>
                    <a href="@($"AddTask/{item.Id}")" class="btn btn-outline-primary btn-sm">Edit</a>

                </div>
                            }
                        }

                    }
                </div>
            </div>



        </Authorized>
    </AuthorizeView>


@code {

    private IEnumerable<TaskUi> tasks;

    protected override async Task OnInitializedAsync()
    {
        tasks = (await Http.GetFromJsonAsync<IEnumerable<TaskUi>>("/Task")).OrderBy(tasks => tasks.StartDate);
    }

    public class TaskUi
    {
        public int Id { get; set; }

        public string Title { get; set; }

        public string Description { get; set; }

        public DateTimeOffset StartDate { get; set; }

        public DateTimeOffset EndDate { get; set; }

        public TaskStatusDto Status { get; set; }

        public int UserId { get; set; }
    }

    private void Edit()
    {
        Console.WriteLine("It works fine!");
    }
}
