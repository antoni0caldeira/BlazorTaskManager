@page "/landingpage"
@using TaskManager.Business.Dtos
@inject HttpClient Http

    <AuthorizeView>
        <Authorized>
            <div class="container">

                <div class="row">


                    @if (tasks == null)
                    {

                        <Loader></Loader>
                    }
                    else
                    {
                        @foreach (var item in tasks)
                        {
                            if (@item.StartDate == DateTime.Today || @item.Status.Name == "Late")
                            {
                                <div class="card" style="box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2); transition: 0.3s; padding: 10px; margin: 5px; width: 22rem;">

                                    <p style="margin-bottom: -2rem; margin-left: 13rem; ">@item.Status.Name</p><span class="status @item.Status.Name.ToString()"></span>
                                    <h3 style="margin-top: -2rem;">@item.Title</h3>
                                    <p>Start: @item.StartDate.ToString("MM/dd/yyyy")</p>
                                    <p>End: @item.EndDate.ToString("MM/dd/yyyy")</p>
                                    <p>@item.Description</p>
                                    <button class="btn btn-outline-primary btn-sm" @onclick="Edit">Edit</button>
                                </div>
                            }
                        }

                    }
                </div>
            </div>

        </Authorized>
    </AuthorizeView>


                    @code {

                        private IEnumerable<TaskUi> tasks;

                        protected override async Task OnInitializedAsync()
                        {
                            tasks = await Http.GetFromJsonAsync<IEnumerable<TaskUi>>("/Task");
                        }

                        public class TaskUi
                        {
                            public int Id { get; set; }

                            public string Title { get; set; }

                            public string Description { get; set; }

                            public DateTimeOffset StartDate { get; set; }

                            public DateTimeOffset EndDate { get; set; }

                            public TaskStatusDto Status { get; set; }

                            public int UserId { get; set; }
                        }

                        private void Edit()
                        {
                            Console.WriteLine("It works fine!");
                        }
                    }
